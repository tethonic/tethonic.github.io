---
import TethonicConfig from "../../tethonic.config";
import I18nKeys from "../locales/keys";
import { i18n } from "../locales/translation";
import { GetCategories, GetTags } from "../utils/content";
import SocialIcon from "./widgets/SocialIcon.astro";

const tags = await GetTags();
const categories = await GetCategories();
---

<div class="flex w-full flex-row justify-center">
  <div class="flex flex-col space-y-3">
    <div
      class="onload-animation rounded-3xl bg-[var(--card-color)] p-3"
      style=`animation-delay: var(--onload-animation-delay);`
    >
      <a href="/about" class="avatar-wrapper">
        <img
          src={TethonicConfig.avatarUrl}
          alt="avatar"
          class="avatar lozad select-none"
        />
      </a>
      <div class="username mt-4">
        <p>{TethonicConfig.username}</p>
      </div>
      <p class="slogan mt-2 text-center text-[var(--text-color-lighten)]">
        {TethonicConfig.sign}
      </p>
      {
        TethonicConfig.socialLinks.length > 0 && (
          <div class="mt-1 flex flex-row justify-center">
            <div class="flex w-[184px] flex-wrap justify-center gap-2">
              {TethonicConfig.socialLinks.map((item) => (
                <SocialIcon name={item.icon} link={item.link} />
              ))}
            </div>
          </div>
        )
      }
    </div>

    <!-- categories -->
    <div
      class="onload-animation space-y-2 rounded-3xl bg-[var(--card-color)] p-3"
      style=`animation-delay: calc(var(--onload-animation-delay) + 1 * var(--onload-animation-interval));`
    >
      <div class="title m-[0.375rem]">
        <p class="pl-4 text-xl font-bold text-[var(--text-color)]">
          {i18n(I18nKeys.side_bar_categories)}
        </p>
      </div>
      <div class="flex flex-col">
        {
          Array.from(categories).map(([category, data]) => (
            <a
              href={`/categories/${category}`}
              class="category flex flex-row items-center justify-between rounded-lg px-3 py-2 transition-all hover:bg-[var(--primary-color-lighten)]"
            >
              <p class="text-[var(--text-color)] transition-all">
                {data.name}
              </p>
              <span class="rounded-md bg-[var(--primary-color-lighten)] px-2.5 py-0.5 text-[var(--primary-color)]">
                {data.posts.length}
              </span>
            </a>
          ))
        }
      </div>
    </div>

    <!-- tags -->
    <div
      class="onload-animation space-y-2 rounded-3xl bg-[var(--card-color)] p-3"
      style=`animation-delay: calc(var(--onload-animation-delay) + 2 * var(--onload-animation-interval));`
    >
      <div class="title m-[0.375rem]">
        <p class="pl-4 text-xl font-bold text-[var(--text-color)]">
          {i18n(I18nKeys.side_bar_tags)}
        </p>
      </div>
      <div class="flex max-w-[224px] flex-row flex-wrap">
        {
          Array.from(tags).map(([tag, data]) => (
            <a
              href={`/tags/${tag}`}
              class="tag m-1 rounded-md bg-[var(--primary-color-lighten)] px-2 py-1 transition-all hover:brightness-95"
            >
              <p class="text-sm text-[var(--primary-color)]">
                {data.name}
              </p>
            </a>
          ))
        }
      </div>
    </div>
  </div>
</div>
<style>
  .avatar-wrapper::after {
    @apply absolute left-3 top-3 h-56 w-56 rounded-xl transition-all content-[''];
  }

  .avatar-wrapper::after:hover {
    @apply bg-black/25 dark:bg-black/50;
  }

  .avatar {
    @apply h-56 w-56 rounded-xl transition-all hover:cursor-pointer;
  }

  .username > p {
    @apply text-center text-xl font-semibold text-[var(--text-color)];
    font-family: var(--title-font);
  }

  .username > div {
    @apply mx-auto mt-1 h-1 w-8 rounded-full bg-[var(--primary-color)];
  }

  .slogan {
    font-family: var(--title-font);
  }

  .title {
    display: flex;
    flex-direction: row;
    align-items: center;
    position: relative;
  }

  .title::before {
    position: absolute;
    display: block;
    content: " ";
    background-color: var(--primary-color);
    top: 3px;
    bottom: 3px;
    width: 0.3rem;
    border-radius: 4px;
  }

  .title p {
    font-family: var(--primary-font);
  }

  .category {
    font-family: var(--primary-font);
  }

  .category:hover > p {
    @apply pl-2 text-[var(--primary-color)];
  }

  .tag {
    font-family: var(--primary-font);
  }
</style>
